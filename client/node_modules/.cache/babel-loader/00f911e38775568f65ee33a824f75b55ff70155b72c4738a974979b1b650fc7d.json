{"ast":null,"code":"import { GET_PRODUCTS, GET_DETAILS, GET_CATEGORIES, FILTER_BY_CATEGORIES, ORDER_PRODUCTS } from \"./types\";\nconst initialState = {\n  allProducts: [],\n  detailsProducts: {},\n  categories: [],\n  filterCategories: [],\n  products: {}\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return {\n        ...state,\n        allProducts: action.payload,\n        filterCategories: action.payload,\n        products: action.payload\n      };\n    case GET_DETAILS:\n      return {\n        ...state,\n        detailsProducts: action.payload\n      };\n    case GET_CATEGORIES:\n      {\n        return {\n          ...state,\n          categories: action.payload\n        };\n      }\n    case FILTER_BY_CATEGORIES:\n      //hacemos una copia del estado\n      const allProduct = [...state.filterCategories];\n      const categorieFilter =\n      //si el valor del target es all devolvemos todos los productos\n      action.payload === \"all\" ? state.products\n      //si no , filtramos el target que llegue qe son de las categorias y devolvemos los que coincidan filtrados por categorias\n      : allProduct.filter(el => el.Categories.map(e => e.name).includes(action.payload));\n      return {\n        ...state,\n        //retornamos todos los productos con el valor que hallamos recibido\n        allProducts: [...categorieFilter]\n      };\n    case ORDER_PRODUCTS:\n      if (action.payload === \"all\") {\n        return {\n          ...state,\n          allProducts: [...state.recipes]\n        };\n      }\n      if (action.payload === \"A-Z\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort((prev, next) => {\n            if (prev.name > next.name) return 1;\n            if (prev.name < next.name) return -1;\n            return 0;\n          })\n        };\n      }\n      if (action.payload === \"Z-A\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort((prev, next) => {\n            if (prev.name > next.name) return -1;\n            if (prev.name < next.name) return 1;\n            return 0;\n          })\n        };\n      }\n      if (action.payload === \"desc\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort((prev, next) => prev.healthScore - next.healthScore)\n        };\n      }\n      if (action.payload === \"asc\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort((prev, next) => next.healthScore - prev.healthScore)\n        };\n      } else {\n        return {\n          ...state.allFoods\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_PRODUCTS","GET_DETAILS","GET_CATEGORIES","FILTER_BY_CATEGORIES","ORDER_PRODUCTS","initialState","allProducts","detailsProducts","categories","filterCategories","products","rootReducer","state","action","type","payload","allProduct","categorieFilter","filter","el","Categories","map","e","name","includes","recipes","allFoods","sort","prev","next","healthScore"],"sources":["C:/Users/Felipe/Desktop/Crud-iluminarte-master/client/src/Redux/reducer.js"],"sourcesContent":["\nimport {\n    GET_PRODUCTS,\n    GET_DETAILS,\n    GET_CATEGORIES,\n    FILTER_BY_CATEGORIES,\n    ORDER_PRODUCTS\n   \n  } from \"./types\";\n  \n  const initialState = {\n    allProducts: [],\n    detailsProducts: {},\n    categories : [],\n    filterCategories : [],\n    products:{}\n   \n  };\n\nconst rootReducer = (state = initialState, action) => {\n\n    switch (action.type) {\ncase GET_PRODUCTS :\n    return {\n        ...state,\n        allProducts: action.payload,\n        filterCategories : action.payload,\n        products : action.payload\n    }\n\n    case GET_DETAILS :\n        return {\n            ...state ,\n            detailsProducts : action.payload\n        }\n\n        case GET_CATEGORIES :{\n            return {\n                ...state ,\n                categories : action.payload\n            }\n        }\n        case FILTER_BY_CATEGORIES:\n          //hacemos una copia del estado\n      const allProduct = [...state.filterCategories];\n      const categorieFilter =\n      //si el valor del target es all devolvemos todos los productos\n      action.payload === \"all\"\n      ? state.products\n      //si no , filtramos el target que llegue qe son de las categorias y devolvemos los que coincidan filtrados por categorias\n      : allProduct.filter((el) => el.Categories.map(e=>e.name).includes(action.payload));\n     \n    \n      return {\n        ...state,\n        //retornamos todos los productos con el valor que hallamos recibido\n        allProducts: [...categorieFilter],\n      };\n\n      case ORDER_PRODUCTS:\n      if (action.payload === \"all\") {\n        return {\n          ...state,\n          allProducts: [...state.recipes],\n        };\n      }\n\n      if (action.payload === \"A-Z\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort((prev, next) => {\n            if (prev.name > next.name) return 1;\n            if (prev.name < next.name) return -1;\n            return 0;\n          }),\n        };\n      }\n\n      if (action.payload === \"Z-A\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort((prev, next) => {\n            if (prev.name > next.name) return -1;\n            if (prev.name < next.name) return 1;\n            return 0;\n          }),\n        };\n      }\n\n      if (action.payload === \"desc\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort(\n            (prev, next) => prev.healthScore - next.healthScore\n          ),\n        };\n      }\n\n      if (action.payload === \"asc\") {\n        return {\n          ...state,\n          allFoods: [...state.allFoods].sort(\n            (prev, next) => next.healthScore - prev.healthScore\n          ),\n        };\n      } else {\n        return { ...state.allFoods };\n      }\n    default:\n        return state;\n    }\n\n};\n\nexport default rootReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}